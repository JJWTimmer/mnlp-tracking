#!/usr/bin/env pythonimport os, sys, poplibfrom email import parserfrom django.core.management.base import NoArgsCommand, CommandErrorfrom _processing import MailProcessorclass Command(NoArgsCommand):    help = 'Process for mnlp email processing'    can_import_settings = True        def handle_noargs(self, **options):        sres = ""        ures = ""        pres = ""        mres = ""        eres = ""        err = False                try:                    mp = MailProcessor()            try:                if os.environ['POP_SSL'] == 'enabled':                    pop_conn = poplib.POP3_SSL(os.environ['POP_SERVER'], int(os.environ['POP_PORT']))                else:                    pop_conn = poplib.POP3(os.environ['POP_SERVER'], int(os.environ['POP_PORT']))            except Exception as ex:                sres = ex                raise ex                            ures = pop_conn.user(os.environ['POP_USER'])            pres = pop_conn.pass_(os.environ['POP_PASSWORD'])            #Get messages from server:            messages = [pop_conn.retr(i) for i in range(1, len(pop_conn.list()[1]) + 1)]            # Concat message pieces:            messages = ["\n".join(mssg[1]) for mssg in messages]            #Parse message into an email object:            messages = [parser.Parser().parsestr(mssg) for mssg in messages]                        try:                for message in messages:                    mp.processMessage(message)            except Exception as ex:                mres = ex                raise ex                    except:            err = True        finally:            try:                pop_conn.quit()            except Exception as ex:                eres = ex                err = True            if err:                raise CommandError("Error processing email, server responses:\n%s\n%s\n%s\n%s\n%s" % (sres, ures, pres, mres, eres))